# -*- coding: utf-8 -*-
"""dataprep.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ie7PyRqtjhGcHRtS7fpjQsZs-0-4KA8V
"""

from google.colab import drive



# Mount Google Drive

drive.mount('/content/drive')

base_path='/content/drive/MyDrive/FAA'

# installing icd10-cm package to deal with icd-10-cm dianostic codes
import sys
!{sys.executable} -m pip install icd10-cm

!pip install psycopg2

# Commented out IPython magic to ensure Python compatibility.
# load libaries
import psycopg2
import pandas as pd                # for dataframe
import numpy as np                   # for dealing with numpy
import matplotlib.pyplot as plt      # for plots
import seaborn as sns                # for statistical data visualization
import json
import icd10                         # for getting info of ICD-10-CM diagnosis codes

# a magic function that renders the figure in a notebook
# %matplotlib Inline

# allow to display all columns of dataframe
pd.set_option('display.max_columns', None)

# Define your database connection parameters
db_params = { "dbname": "IBM_MarketScan", "user": "faa_student", "password": "deM%9tAch^", "host": "pixel.ourcloud.ou.edu", "port": "5432" }

# Establish a connection to the database
try:
    connection = psycopg2.connect(**db_params)
    cursor = connection.cursor()
    print("Connected to the database")
except Exception as e:
    print(f"Error: {e}")

df_19 = pd.read_sql_query(f"SELECT * FROM merged_19_inout", connection)
df_20 = pd.read_sql_query(f"SELECT * FROM merged_20_inout", connection)
# Close the cursor and connection
cursor.close()
connection.close()

disease_names = ['I','II','III','IV','V','VI','VII','VIII','IX','X','XI','XII','XIII','XIV','XV','XVI','XVII','XVIII','XIX','XX','XXI','XXII']

df_final_19 = df_19.reindex(columns= ['enrolid','age','sex','agegrp','shortstay','mediumstay','longstay','imp_mdc','non_mdc','emer_visits',
                             'non_emer_visits','thergrp_count'] + disease_names,fill_value=0)
print(df_final_19.head())

dict_19 = {}
# creating dict with each unique enrolid as key
for i in df_19['enrolid']:
    dict_19[i] = []
# length of dictionary is equal to unique enrolids in merged dataset
len(dict_19)

for index,row in df_19.iterrows():
  enrolid=row['enrolid']
  merged_dxcodes_json = row['dxcodes']
  for i in merged_dxcodes_json:
    for j in i:
      dict_19[enrolid].append(j)

dict_19

for i in df_final_19['enrolid']:
    for j in dict_19[i]:
        cod = icd10.find(j)    # icd10.find('icd10-code') gets the icd10cm code information
        if type(cod) is icd10.ICD10:
            try:
                df_final_19.loc[df_final_19['enrolid'] == i, cod.chapter]  += 1    # count/increment the chapter found in that row by 1
            except KeyError:                 # had to put exception to Key and Value Error, I am speculating that some ICD10 code might
                pass                         # be incorrect and giving these errors, but cannot find the exact cause yet.
            except ValueError:
                pass

df_final_19

pip install pandas sqlalchemy

from sqlalchemy import create_engine

df = pd.DataFrame(df_final_19)

db_url = "postgresql://faa_student:deM%9tAch^@pixel.ourcloud.ou.edu/IBM_MarketScan"
engine = create_engine(db_url)

table_name = 'transformed_19'  # Replace with the desired table name
df.to_sql(table_name, engine, if_exists='replace', index=False)

# Close the cursor and connection
cursor.close()
connection.close()

df_final_20 = df_20.reindex(columns= ['enrolid','age','sex','agegrp','shortstay','mediumstay','longstay','imp_mdc','non_mdc','emer_visits',
                             'non_emer_visits','thergrp_count'] + disease_names,fill_value=0)

dict_20 = {}
# creating dict with each unique enrolid as key
for i in df_20['enrolid']:
    dict_20[i] = []
# length of dictionary is equal to unique enrolids in merged dataset
len(dict_20)

for index,row in df_20.iterrows():
  enrolid=row['enrolid']
  merged_dxcodes_json = row['dxcodes']
  for i in merged_dxcodes_json:
    for j in i:
      dict_20[enrolid].append(j)

dict_20

for i in df_final_20['enrolid']:
    for j in dict_20[i]:
        cod = icd10.find(j)    # icd10.find('icd10-code') gets the icd10cm code information
        if type(cod) is icd10.ICD10:
            try:
                df_final_20.loc[df_final_20['enrolid'] == i, cod.chapter]  += 1    # count/increment the chapter found in that row by 1
            except KeyError:                 # had to put exception to Key and Value Error, I am speculating that some ICD10 code might
                pass                         # be incorrect and giving these errors, but cannot find the exact cause yet.
            except ValueError:
                pass

df_final_20

df20 = pd.DataFrame(df_final_20)

db_url = "postgresql://faa_student:deM%9tAch^@pixel.ourcloud.ou.edu/IBM_MarketScan"
engine = create_engine(db_url)

table_name = 'transformed_20'  # Replace with the desired table name
df20.to_sql(table_name, engine, if_exists='replace', index=False)

